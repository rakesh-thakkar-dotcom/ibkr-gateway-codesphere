# Simple, transparent reverse proxy: Public :$PORT -> IBKR Gateway https://127.0.0.1:5000
server {
    listen 0.0.0.0:$PORT;
    server_name _;

    # IBKR pages can have many/large headers
    large_client_header_buffers 4 16k;

    location / {
        # Upstream is the gateway's HTTPS
        proxy_pass https://127.0.0.1:5000;

        # TLS to upstream: we don't verify the self-signed cert
        proxy_ssl_server_name on;
        proxy_ssl_verify      off;

        # HTTP/1.1 for websockets/keepalive
        proxy_http_version 1.1;

        # Preserve original host so Set-Cookie is minted for our public host
        proxy_set_header Host $host;

        # Forward real client info
        proxy_set_header X-Real-IP       $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # MOST IMPORTANT: tell upstream the original client came via HTTPS
        # so it uses Secure cookies and avoids login loops
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  443;

        # WebSocket / SSE friendliness
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_buffering off;

        # Donâ€™t rewrite upstream redirects/cookies unless necessary
        proxy_redirect off;
    }

    # Health check
    location = /healthz {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }
}

# Helper to correctly set Connection header with Upgrade
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

